.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.10)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "dos2unix 1"
.TH dos2unix 1 "2010-07-23" "dos2unix" "2010-08-18"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dos2unix \- DOS/MAC to UNIX and vice versa text file format converter
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    dos2unix [options] [\-c CONVMODE] [\-o FILE ...] [\-n INFILE OUTFILE ...]
\&    unix2dos [options] [\-c CONVMODE] [\-o FILE ...] [\-n INFILE OUTFILE ...]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Dos2unix package includes utilities \f(CW\*(C`dos2unix\*(C'\fR and \f(CW\*(C`unix2dos\*(C'\fR to convert
plain text files in \s-1DOS\s0 or \s-1MAC\s0 format to \s-1UNIX\s0 format and vice versa.  Binary files
and non-regular files, such as soft links, are automatically skipped, unless
conversion is forced.
.PP
Dos2unix has a few conversion modes similar to dos2unix under SunOS/Solaris.
.PP
In DOS/Windows text files line endings exist out of a combination of two characters:
a Carriage Return (\s-1CR\s0) followed by a Line Feed (\s-1LF\s0).
In Unix text files line endings exists out of a single Newline character which
is equal to a \s-1DOS\s0 Line Feed (\s-1LF\s0) character.
In Mac text files, prior to Mac \s-1OS\s0 X, line endings exist out of a single Carriage
Return character. Mac \s-1OS\s0 X is Unix based and has the same line endings as Unix.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-c, \-\-convmode \s-1CONVMODE\s0\fR" 4
.IX Item "-c, --convmode CONVMODE"
Set conversion mode. Where \s-1CONVMODE\s0 is one of:
\&\fIascii\fR, \fI7bit\fR, \fIiso\fR, \fImac\fR
with ascii being the default.
.IP "\fB\-f, \-\-force\fR" 4
.IX Item "-f, --force"
Force conversion of all files. Also binary files.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Display online help.
.IP "\fB\-k, \-\-keepdate\fR" 4
.IX Item "-k, --keepdate"
Keep the date stamp of output file same as input file.
.IP "\fB\-L, \-\-license\fR" 4
.IX Item "-L, --license"
Display software license.
.IP "\fB\-l, \-\-newline\fR" 4
.IX Item "-l, --newline"
Add additional newline.
.Sp
\&\fBdos2unix\fR: Only \s-1DOS\s0 line endings are changed to two Unix line endings.
In Mac mode only Mac line endings are changed to two Unix
line endings.
.Sp
\&\fBunix2dos\fR: Only Unix line endings are changed to two \s-1DOS\s0 line endings.
In Mac mode Unix line endings are changed to two Mac line endings.
.IP "\fB\-n, \-\-newfile \s-1INFILE\s0 \s-1OUTFILE\s0 ...\fR" 4
.IX Item "-n, --newfile INFILE OUTFILE ..."
New file mode. Convert file \s-1INFILE\s0 and write output to file \s-1OUTFILE\s0. File names
must be given in pairs and wildcard names should \s-1NOT\s0 be used or you \s-1WILL\s0
lose your files.
.IP "\fB\-o, \-\-oldfile \s-1FILE\s0 ...\fR" 4
.IX Item "-o, --oldfile FILE ..."
Old file mode. Convert file \s-1FILE\s0 and overwrite output to it. The program
default to run in this mode. Wildcard names may be used.
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Quiet mode. Suppress all warning and messages.
.IP "\fB\-V, \-\-version\fR" 4
.IX Item "-V, --version"
Display version information.
.SH "CONVERSION MODES"
.IX Header "CONVERSION MODES"
Conversion modes \fIascii\fR, \fI7bit\fR, and \fIiso\fR
are similar to those of dos2unix/unix2dos under SunOS/Solaris.
.IP "\fBascii\fR" 4
.IX Item "ascii"
\&\fBdos2unix\fR: In this mode \s-1DOS\s0 line endings are converted to Unix line endings.
Unix and Mac line endings are not changed.
.Sp
\&\fBunix2dos\fR: In this mode Unix line endings are converted to \s-1DOS\s0 line endings.
\&\s-1DOS\s0 and Mac line endings are not changed.
.Sp
Although the name of this mode is \s-1ASCII\s0, which is a 7 bit standard,
the actual mode is 8 bit.
.IP "\fBmac\fR" 4
.IX Item "mac"
\&\fBdos2unix\fR: In this mode Mac line endings are converted to Unix line endings.
\&\s-1DOS\s0 and Unix line endigs are not changed. You can also use the command \f(CW\*(C`mac2unix\*(C'\fR to
run dos2unix in Mac mode.
.Sp
\&\fBunix2dos\fR: In this mode Unix line endings are converted to Mac line endings.
\&\s-1DOS\s0 and Mac line endigs are not changed. You can also use the command \f(CW\*(C`unix2mac\*(C'\fR to
run unix2dos in Mac mode.
.IP "\fB7bit\fR" 4
.IX Item "7bit"
In this mode \s-1DOS\s0 line endings are converted to Unix line endings or vice versa.
All 8 bit non-ASCII characters (with values from 128 to 255) are converted
to a space.
.IP "\fBiso\fR" 4
.IX Item "iso"
In this mode \s-1DOS\s0 line endings are converted to Unix line endings or vice versa.
Characters are converted between the \s-1DOS\s0 character set (code page) \s-1CP437\s0 and \s-1ISO\s0
character set \s-1ISO\-8859\-1\s0 on Unix. \s-1CP437\s0 characters without \s-1ISO\-8859\-1\s0
equivalent, for which conversion is not possible, are converted to a dot. The
same counts for \s-1ISO\-8859\-1\s0 characters without \s-1CP437\s0 counterpart. \s-1CP437\s0 is
mainly used in the \s-1USA\s0. In Western Europe \s-1CP850\s0 is more standard.
.Sp
Another option to convert text files between different encodings is to use
dos2unix in combination with \fIiconv\fR\|(1). Iconv can convert between a long list of
character encodings. Some examples:
.Sp
Convert from \s-1DOS\s0 DOSLatinUS to Unix Latin\-1
.Sp
.Vb 1
\&    iconv \-f CP437 \-t ISO\-8859\-1 in.txt | dos2unix > out.txt
.Ve
.Sp
Convert from \s-1DOS\s0 DOSLatin1 to Unix Latin\-1
.Sp
.Vb 1
\&    iconv \-f CP850 \-t ISO\-8859\-1 in.txt | dos2unix > out.txt
.Ve
.Sp
Convert from Windows WinLatin1 to Unix Latin\-1
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t ISO\-8859\-1 in.txt | dos2unix > out.txt
.Ve
.Sp
Convert from Windows WinLatin1 to Unix \s-1UTF\-8\s0 (Unicode)
.Sp
.Vb 1
\&    iconv \-f CP1252 \-t UTF\-8 in.txt | dos2unix > out.txt
.Ve
.Sp
Convert from Windows \s-1UTF\-16\s0 (Unicode) to Unix \s-1UTF\-8\s0 (Unicode)
.Sp
.Vb 1
\&    iconv \-f UTF\-16 \-t UTF\-8 in.txt | dos2unix > out.txt
.Ve
.Sp
Convert from Unix Latin\-1 to \s-1DOS\s0 DOSLatinUS
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f ISO\-8859\-1 \-t CP437 > out.txt
.Ve
.Sp
Convert from Unix Latin\-1 to \s-1DOS\s0 DOSLatin1
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f ISO\-8859\-1 \-t CP850 > out.txt
.Ve
.Sp
Convert from Unix Latin\-1 to Windows WinLatin1
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f ISO\-8859\-1 \-t CP1252 > out.txt
.Ve
.Sp
Convert from Unix \s-1UTF\-8\s0 (Unicode) to Windows WinLatin1
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t CP1252 > out.txt
.Ve
.Sp
Convert from Unix \s-1UTF\-8\s0 (Unicode) to Windows \s-1UTF\-16\s0 (Unicode)
.Sp
.Vb 1
\&    unix2dos < in.txt | iconv \-f UTF\-8 \-t UTF\-16 > out.txt
.Ve
.Sp
See also <http://czyborra.com/charsets/codepages.html>
and <http://czyborra.com/charsets/iso8859.html>.
.SH "UNICODE"
.IX Header "UNICODE"
There exist different Unicode encodings. On Unix/Linux Unicode
files are mostly encoded in \s-1UTF\-8\s0 encoding. \s-1UTF\-8\s0 is \s-1ASCII\s0 compatible. \s-1UTF\-8\s0
files can have \s-1DOS\s0, Unix or Mac line endings. It is safe to run dos2unix/unix2dos on
\&\s-1UTF\-8\s0 encoded files. On Windows mostly \s-1UTF\-16\s0 encoding is used for Unicode
files. Dos2unix/unix2dos should not be run on \s-1UTF\-16\s0 files. \s-1UTF\-16\s0 files are
automatically skipped, because it are binary files.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Read input from 'stdin' and write output to 'stdout'.
.PP
.Vb 2
\&    dos2unix
\&    dos2unix \-l \-c mac
.Ve
.PP
Convert and replace a.txt. Convert and replace b.txt.
.PP
.Vb 2
\&    dos2unix a.txt b.txt
\&    dos2unix \-o a.txt b.txt
.Ve
.PP
Convert and replace a.txt in ascii conversion mode.
.PP
.Vb 1
\&    dos2unix a.txt
.Ve
.PP
Convert and replace a.txt in ascii conversion mode.
Convert and replace b.txt in 7bit conversion mode.
.PP
.Vb 2
\&    dos2unix a.txt \-c 7bit b.txt
\&    dos2unix \-c ascii a.txt \-c 7bit b.txt
.Ve
.PP
Convert a.txt from Mac to Unix format.
.PP
.Vb 2
\&    dos2unix \-c mac a.txt
\&    mac2unix a.txt
.Ve
.PP
Convert a.txt from Unix to Mac format.
.PP
.Vb 2
\&    unix2dos \-c mac a.txt
\&    unix2mac a.txt
.Ve
.PP
Convert and replace a.txt while keeping original date stamp.
.PP
.Vb 2
\&    dos2unix \-k a.txt
\&    dos2unix \-k \-o a.txt
.Ve
.PP
Convert a.txt and write to e.txt.
.PP
.Vb 1
\&    dos2unix \-n a.txt e.txt
.Ve
.PP
Convert a.txt and write to e.txt, keep date stamp of e.txt same as a.txt.
.PP
.Vb 1
\&    dos2unix \-k \-n a.txt e.txt
.Ve
.PP
Convert and replace a.txt. Convert b.txt and write to e.txt.
.PP
.Vb 2
\&    dos2unix a.txt \-n b.txt e.txt
\&    dos2unix \-o a.txt \-n b.txt e.txt
.Ve
.PP
Convert c.txt and write to e.txt. Convert and replace a.txt.
Convert and replace b.txt. Convert d.txt and write to f.txt.
.PP
.Vb 1
\&    dos2unix \-n c.txt e.txt \-o a.txt b.txt \-n d.txt f.txt
.Ve
.SH "LOCALIZATION"
.IX Header "LOCALIZATION"
.IP "\fB\s-1LANG\s0\fR" 4
.IX Item "LANG"
The primary language is selected with the environment variable \s-1LANG\s0. The \s-1LANG\s0
variable consists out of several parts.  The first part is in small letters the
language code. The second is optional and is the country code in capital
letters, preceded with an underscore. There is also an optional third part:
character encoding, preceded with a dot. A few examples for \s-1POSIX\s0 standard type
shells:
.Sp
.Vb 7
\&    export LANG=nl               Dutch
\&    export LANG=nl_NL            Dutch, The Netherlands
\&    export LANG=nl_BE            Dutch, Belgium
\&    export LANG=es_ES            Spanish, Spain
\&    export LANG=es_MX            Spanish, Mexico
\&    export LANG=en_US.iso88591   English, USA, Latin\-1 encoding
\&    export LANG=en_GB.UTF\-8      English, UK, UTF\-8 encoding
.Ve
.Sp
For a complete list of language and country codes see the gettext manual:
<http://www.gnu.org/software/gettext/manual/gettext.html#Language\-Codes>
.Sp
On Unix systems you can use to command \fIlocale\fR\|(1) to get locale specific
information.
.IP "\fB\s-1LANGUAGE\s0\fR" 4
.IX Item "LANGUAGE"
With the \s-1LANGUAGE\s0 environment variable you can specify a priority list of
languages, separated by colons. Dos2unix gives preference to \s-1LANGUAGE\s0 over \s-1LANG\s0.
For instance, first Dutch and then German: \f(CW\*(C`LANGUAGE=nl:de\*(C'\fR. You have to first
enable localization, by setting \s-1LANG\s0 (or \s-1LC_ALL\s0) to a value other than
\&\*(L"C\*(R", before you can use a language priority list through the \s-1LANGUAGE\s0
variable. See also the gettext manual:
<http://www.gnu.org/software/gettext/manual/gettext.html#The\-LANGUAGE\-variable>
.Sp
For Esperanto there is a special language file in x\-method format. X\-method can
be used on systems that don't support Latin\-3 or Unicode character encoding.
Make \s-1LANGUAGE\s0 equal to \*(L"eo\-x:eo\*(R".
.Sp
If you select a language which is not available you will get the
standard English messages.
.IP "\fB\s-1DOS2UNIX_LOCALEDIR\s0\fR" 4
.IX Item "DOS2UNIX_LOCALEDIR"
With the environment variable \s-1DOS2UNIX_LOCALEDIR\s0 the \s-1LOCALEDIR\s0 set during
compilation can be overruled. \s-1LOCALEDIR\s0 is used to find the language files. The
\&\s-1GNU\s0 default value is \f(CW\*(C`/usr/local/share/locale\*(C'\fR. Option \*(L"\-V\*(R" will display the
\&\s-1LOCALEDIR\s0 that is used.
.Sp
Example (Windows Command Prompt):
.Sp
.Vb 1
\&    set DOS2UNIX_LOCALEDIR=c:/my_prefix/share/locale
.Ve
.SH "AUTHORS"
.IX Header "AUTHORS"
Benjamin Lin \- <blin@socs.uts.edu.au>
.PP
Bernd Johannes Wuebben (mac2unix mode) \- <wuebben@kde.org>
.PP
Erwin Waterlander \- <waterlan@xs4all.nl>
.PP
Project page: <http://www.xs4all.nl/~waterlan/dos2unix.html>
.PP
SourceForge page: <http://sourceforge.net/projects/dos2unix/>
.PP
Freshmeat: <http://freshmeat.net/projects/dos2unix>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIiconv\fR\|(1)
